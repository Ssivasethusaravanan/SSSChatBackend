import { Address } from "abitype/zod";
import z from "zod";
import { createPublicErc4337ClientSchema } from "../client/schema.js";
import { ChainSchema } from "../utils/index.js";
export const SmartAccountProviderOptsSchema = z.object({
    txMaxRetries: z.number().min(0).optional(),
    txRetryIntervalMs: z.number().min(0).optional(),
    txRetryMulitplier: z.number().min(0).optional(),
    minPriorityFeePerBid: z.bigint().min(0n).optional(),
    maxPriorityFeePerGasEstimateBuffer: z.number().min(0).optional(),
});
export const createSmartAccountProviderConfigSchema = () => {
    return z.object({
        rpcProvider: z.union([
            z.string(),
            createPublicErc4337ClientSchema(),
        ]),
        chain: ChainSchema,
        entryPointAddress: Address.optional(),
        opts: SmartAccountProviderOptsSchema.optional(),
    });
};
//# sourceMappingURL=schema.js.map